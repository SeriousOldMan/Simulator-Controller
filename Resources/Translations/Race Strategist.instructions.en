[Instructions]
PitstopRecommend=The driver requested you to recommend the best lap for an upcoming pitstop. Take a detailed look at the data about the session and the state of the car. Very important is the information about the positions of all cars at the time of the recommended pitstop, which can be calculated based on their lap time and their current distance into the track. Check, if an undercut or overcut is possible for the driver by evaluating different scenarios. When you have come to a recommendation, call the available function "recommend_pitstop".\n\nMake sure to consider the following:\n\n- %targetLapRule%\n\n- If no pitstop is necessary due to remaining fuel and remaining session time, call "recommend_pitstop" with 0 as argument.\n\n- If the function "__explain_reasoning__" is available, call this function also to explain your thoughts and conclusions.\n\nThink as hard as you can and validate your recommendation against the supplied data, especially take a look at the position development of all cars and the remaining fuel.
StrategyRecommend=Check and adapt (if necessary) the provided race strategy supplied below in JSON format. Thoroughly analyze timing, tyre choices, fuel levels, pitstop sequencing, and stint durations to optimize for safety, speed, and compliance with racing rules. Beside analyzing the strategy object, also take the data about the session and the state of the car into account. Make sure your reasoning steps are completed before updating the actual strategy object.\n\nContinue reasoning until every aspect of the adapted strategy is addressed. Use a chain-of-thought approach for your internal planning; only output the final, revised strategy object in textual JSON format by calling the "update_strategy" function. If no changes were necessary, call "update_strategy" without any arguments.\n\nOutput Format:\nReturn only the updated strategy in valid JSON as text, reflecting all necessary changes to stints, tyre choices and pitstops. The JSON should match the structure of the original strategy object you received. Do not include explanations, extra text, or code blocks - respond with the revised strategy object only.\n\nImportant:\n- At the end call the "update_strategy" function with the resulting strategy in the form of a single JSON object as text. Make absolutely sure, that this JSON object is in valid format. If no changes were necessary, call "update_strategy" without any arguments.\n- Ensure that stints and tire types are optimized for the known weather conditions.\n- Maintain all other elements of the original strategy unless they must be changed.\n- Double-check that the timestamps and tyre changes align appropriately with the onset and end of weather conditions, if necessary.\n- If the function "__explain_reasoning__" is available, call this function also to explain your thoughts and conclusions.\n\nMake sure to consider the following:\n\n- %pitstopRule%\n\n- %weatherRule%\n\nHere is the current strategy:\n\n%strategy%
[Rules]
TargetLapRuleFixed=The driver requested lap %targetLap% for the pitstop, but evaluate %deltaLaps% laps before and after this lap as well.
TargetLapRuleVariable=You are free to determine the lap for the pitstop on your own, but also take into account, how many laps are still possible with the remaining fuel.
PitstopRuleFullCourseYellow=Full course yellow is active. Check whether a pitstop under full course yellow may be beneficial with regards to the complete race. A pitstop under full course yellow must be compliant with the race rules, of course.
PitstopRuleFixed=The driver requested to pit in lap %lap%. This may be due to an accident and resulting damage. So check, whether pitting in this lap is possible.
PitstopRuleVariable=You can choose any lap for the next pitstop, as long as it is compliant with the race rules.
WeatherRuleChange=The weather will change in the next %minutes% minutes. The expected weather is %weather%.
WeatherRuleStable=The weather will not change in the next time.